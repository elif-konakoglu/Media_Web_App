{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Meeting } from 'src/Models/Meeting';\nlet HomeComponent = class HomeComponent {\n  constructor(meetingService, cdr, zone) {\n    this.meetingService = meetingService;\n    this.cdr = cdr;\n    this.zone = zone;\n    this.meetings = [];\n    this.currentMeeting = new Meeting();\n    this.isEditing = false;\n    let localUserId = localStorage.getItem('userId');\n    if (localUserId !== null && localUserId !== undefined) {\n      this.userId = +localUserId;\n      this.getAll(this.userId);\n    }\n  }\n  onFileChange(event) {\n    const fileList = event.target.files;\n    if (fileList.length > 0) {\n      this.currentMeeting.document = fileList[0];\n    }\n  }\n  getAll(userId) {\n    this.meetingService.getAll(userId).subscribe(response => {\n      this.meetings = response;\n    }, error => {\n      console.log(error);\n    });\n  }\n  editMeeting(meeting) {\n    this.isEditing = true;\n    this.currentMeeting = {\n      ...meeting\n    };\n  }\n  deleteMeeting(meetingId) {\n    this.meetingService.delete(meetingId).subscribe(() => {\n      this.getAll(this.userId);\n    }, error => {\n      console.log(error);\n    });\n  }\n  saveMeeting() {\n    let formData = new FormData();\n    formData.append('UserId', this.userId.toString());\n    formData.append('Name', this.currentMeeting.name);\n    formData.append('Description', this.currentMeeting.description);\n    formData.append('StartDate', this.currentMeeting.startDate.toString());\n    formData.append('EndDate', this.currentMeeting.endDate.toString());\n    formData.append('Document', this.currentMeeting.document);\n    if (this.isEditing) {\n      formData.append('Id', this.currentMeeting.id.toString());\n      this.updateMeeting(formData);\n      return;\n    }\n    this.createMeeting(formData);\n  }\n  updateMeeting(meeting) {\n    this.meetingService.update(meeting).subscribe(() => {\n      this.getAll(this.userId);\n    }, error => {\n      console.log(error);\n    });\n  }\n  createMeeting(meeting) {\n    this.meetingService.create(meeting).subscribe(() => {\n      this.getAll(this.userId);\n    }, error => {\n      console.log(error);\n    });\n  }\n  resetForm() {\n    this.zone.run(() => {\n      this.isEditing = false;\n      this.currentMeeting = {\n        id: 0,\n        userId: 0,\n        name: '',\n        startDate: new Date(),\n        endDate: new Date(),\n        description: '',\n        document: new File([], 'placeholder.txt', {\n          type: 'text/plain'\n        })\n      };\n    });\n    this.cdr.detectChanges();\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);\nexport { HomeComponent };","map":{"version":3,"mappings":"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","names":["Component","Meeting","HomeComponent","constructor","meetingService","cdr","zone","localUserId","localStorage","getItem","undefined","userId","getAll","onFileChange","event","fileList","target","files","length","currentMeeting","document","subscribe","response","meetings","error","console","log","editMeeting","meeting","isEditing","deleteMeeting","meetingId","delete","saveMeeting","formData","FormData","append","toString","name","description","startDate","endDate","id","updateMeeting","createMeeting","update","create","resetForm","run","Date","File","type","detectChanges","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/kutayavci/Projects/Alpata/Alpata/Web/src/app/home/home.component.ts"],"sourcesContent":["import { ChangeDetectorRef, Component } from '@angular/core';\nimport { Meeting } from 'src/Models/Meeting';\nimport { MeetingService } from 'src/services/meeting.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css'],\n})\nexport class HomeComponent {\n  meetings: Meeting[] = [];\n  currentMeeting: Meeting = new Meeting();\n  userId: number;\n  isEditing = false;\n\n  constructor(\n    private meetingService: MeetingService,\n    private cdr: ChangeDetectorRef,\n    private zone: NgZone\n  ) {\n    let localUserId = localStorage.getItem('userId');\n\n    if (localUserId !== null && localUserId !== undefined) {\n      this.userId = +localUserId;\n      this.getAll(this.userId);\n    }\n  }\n\n  onFileChange(event: any) {\n    const fileList: FileList = event.target.files;\n    if (fileList.length > 0) {\n      this.currentMeeting.document = fileList[0];\n    }\n  }\n\n  getAll(userId: number) {\n    this.meetingService.getAll(userId).subscribe(\n      (response) => {\n        this.meetings = response as Meeting[];\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  editMeeting(meeting: Meeting) {\n    this.isEditing = true;\n    this.currentMeeting = { ...meeting };\n  }\n\n  deleteMeeting(meetingId: number) {\n    this.meetingService.delete(meetingId).subscribe(\n      () => {\n        this.getAll(this.userId);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  saveMeeting(){\n    let formData: FormData = new FormData();\n    formData.append('UserId', this.userId.toString());\n    formData.append('Name', this.currentMeeting.name);\n    formData.append('Description', this.currentMeeting.description);\n    formData.append('StartDate', this.currentMeeting.startDate.toString());\n    formData.append('EndDate', this.currentMeeting.endDate.toString());\n    formData.append('Document', this.currentMeeting.document);\n    \n    if(this.isEditing){\n      formData.append('Id', this.currentMeeting.id.toString());\n      this.updateMeeting(formData);\n      return;\n    }\n  \n    this.createMeeting(formData);\n  }\n\n  updateMeeting(meeting: FormData) {\n    this.meetingService.update(meeting).subscribe(\n      () => {\n        this.getAll(this.userId);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  createMeeting(meeting: FormData) {\n    this.meetingService.create(meeting).subscribe(\n      () => {\n        this.getAll(this.userId);\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n\n  resetForm(): void {\n    this.zone.run(() => {\n    this.isEditing = false;\n    this.currentMeeting = {id: 0, userId: 0, name: '', startDate: new Date(), endDate: new Date(), description: '', document: new File([], 'placeholder.txt', { type: 'text/plain' }) };\n  });this.cdr.detectChanges();\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}