{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7143/user/';\n  }\n  login(model) {\n    return this.http.post(this.baseUrl + 'login', model);\n  }\n  register(model) {\n    return this.http.post(this.baseUrl + 'save', model);\n  }\n  static #_ = this.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,8BAA8B;EAET;EAEvCC,KAAK,CAACC,KAAsB;IAC1B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,IAAI,CAACC,OAAO,GAAG,OAAO,EAAEF,KAAK,CAAiC;EACtF;EAEAG,QAAQ,CAACH,KAAe;IACtB,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,IAAI,CAACC,OAAO,GAAG,MAAM,EAAEF,KAAK,CAAiC;EACrF;EAAC;qBAXUJ,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAQ,SAAXR,WAAW;IAAAS,YAFV;EAAM","names":["UserService","constructor","http","login","model","post","baseUrl","register","factory","providedIn"],"sourceRoot":"","sources":["/Users/kutayavci/Projects/Alpata/Alpata/Web/src/services/user.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { LoginRequestDto } from 'src/Models/LoginRequestModel';\nimport { LoginResponseDto } from 'src/Models/LoginResponseDto';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  private baseUrl = 'https://localhost:7143/user/';\n\n  constructor(private http: HttpClient) {}\n\n  login(model: LoginRequestDto) : Observable<LoginResponseDto> {\n    return this.http.post(this.baseUrl + 'login', model) as Observable<LoginResponseDto>;\n  }\n\n  register(model: FormData) : Observable<LoginResponseDto> {\n    return this.http.post(this.baseUrl + 'save', model) as Observable<LoginResponseDto>;\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}